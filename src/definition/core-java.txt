***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer: an artificial language used to communicate instructions to a computer

What is a JDK composed of? Define each components?
Answer: a software development environment used for developing Java applications and applets. Here are a few components: JRE: Java Runtime Environment
                                                                                                                         java: It’s simply a loader that works for all the java applications. Also, this particular tool interprets the class file generated by javac. The single java launcher is used for the purpose of development and deployment. Gone are the days, when JRE was used as the deployment launcher. Nowadays, JRE doesn’t exist with the Sun JDK and totally replaced by this new java loader.
                                                                                                                         javac: It’s a compiler. And, basically, it converts source code into Java bytecode
                                                                                                                         appletviewer: Through this component, without taking the help of a web browser, we can run the Java applets and even debug them.
                                                                                                                         apt: This is used as an annotation-processing tool

What is an IDE?
Answer: software for building applications that combines common developer tools into a single graphical user interface (GUI).

What are some of the most popular Java IDEs available in the market?
Answer: Eclipse.
        NetBeans.
        IntelliJ IDEA.
        BlueJ.
        (Oracle) JDeveloper.
        DrJava.
        JCreator.
        jGRASP.

Explain the entire java life cycle.
Answer: you will start with typing the program in a text-editor (ex: notepad, notepad++, wordpad, textedit etc). After completing editing of the program, we have to save the file. While saving the file you should remember that the file must be saved with .java extension.
        Second is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which is available in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode. The file which is generated after compilation is .class file.
        Last is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

What is a class?
Answer: a user defined blueprint or prototype from which objects are created.

What is an object?
Answer: a self-contained component which consists of methods and properties to make certain type of data useful.

What is the entry point of an application?
Answer: Java main method is the entry point of any java program. Its syntax is always public static void main(String[] args) .

Why is the main() static?
Answer: so compiler can call it without the creation of an object or before the creation of an object of the class

Which class is the superclass of all classes?
Answer: object class

What is difference between path and classpath variables?
Answer: Path is an environment variable which is used by the operating system to find the executables.
        Classpath is an environment variable which is used by the Java compiler to find the path, of classes.ie in J2EE we give the path of jar files.

What is the difference between an Interface and Abstract class?
Answer: Abstract classes can have constants, members, method stubs (methods without a body) and defined methods, whereas interfaces can only have constants and methods stubs

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: No, you cannot instantiate an interface, it contains abstract methods which are incomplete. What you can do is to implement a subclass of abstract class which, of course, must not be abstract.

What is Access Modifier?
Answer: access modifiers in Java helps to restrict the scope of a class, constructor, variable, method, or data member. There are four types of access modifiers available in java:
        Default – No keyword required
        Private
        Protected
        Public

What is OOP? Define each OOP concept.
Answer: OOP is a computer programming model that organizes software design around data, or objects, rather than functions and logic. An object can be defined as a data field that has unique attributes and behavior.
        Encapsulation. The implementation and state of each object are privately held inside a defined boundary, or class. Other objects do not have access to this class or the authority to make changes but are only able to call a list of public functions, or methods. This characteristic of data hiding provides greater program security and avoids unintended data corruption.
        Abstraction. Objects only reveal internal mechanisms that are relevant for the use of other objects, hiding any unnecessary implementation code. This concept helps developers more easily make changes and additions over time.
        Inheritance. Relationships and subclasses between objects can be assigned, allowing developers to reuse a common logic while still maintaining a unique hierarchy. This property of OOP forces a more thorough data analysis, reduces development time and ensures a higher level of accuracy.
        Polymorphism. Objects can take on more than one form depending on the context. The program will determine which meaning or usage is necessary for each execution of that object, cutting down the need to duplicate code.

What is Java Package and which package is imported by default?
Answer: Java compiler imports java. lang package internally by default.

What is an API? List some API's that you have used so far.
Answer:  API delivers a user response to a system and sends the system’s response back to a user

Does java support multiple inheritance? Why or why not?
Answer: A class can implement any number of interfaces but can extend only one class. Java doesn’t allow multiple inheritance to avoid the ambiguity caused by it.

What is method overloading and when does it happen?
Answer: Overloading occurs when two or more methods in one class have the same method name but different parameters.
        Must have at least two methods by the same name in the class. Must have a different number of parameters.

Explain exceptions in java and how to handle them.
Answer: An Exception is an unwanted event that interrupts the normal flow of the program. When an exception occurs program execution gets terminated.
        If an exception occurs, which has not been handled by programmer then program execution gets terminated and a system generated error message is shown to the user.

What is static keyword? When and how do we use it?
Answer: the keyword static indicates that the particular member belongs to a type itself, rather than to an instance of that type. static is used for a constant variable or a method that is same for every instance of a class.

What is final keyword? When and how do we use it?
Answer: The final keyword can be used while declaring an entity. Using the final keyword means that the value can't be modified in the future. This entity can be - but is not limited to - a variable, a class or a method.

Explain the difference between final, finally and finalize?
Answer: Final class can't be inherited, final method can't be overridden and final variable value can't be changed. Finally is used to place important code, it will be executed whether exception is handled or not. Finalize is used to perform clean up processing just before object is garbage collected.

What is a constructor?
Answer: A constructor in Java is a special method that is used to initialize objects. The constructor is called when an object of a class is created.

Can we have multiple constructors in a class?
Answer: There can be multiple constructors in a class. However, the parameter list of the constructors should not be same. This is known as constructor overloading.

If we don't have a constructor declared, what is called during the object creation?
Answer: All classes have at least one constructor. If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor, called the default constructor. ... If the parent has no constructor ( Object does have one), the compiler will reject the program.

What is "this" keyword in Java? When would we use it?
Answer: The this keyword refers to the current object in a method or constructor. The most common use of the this keyword is to eliminate the confusion between class attributes and parameters with the same name (because a class attribute is shadowed by a method or constructor parameter).

What is "super" keyword in Java? What are some scenarios we would use it?
Answer: We can use super keyword to access the data member or field of parent class. It is used if parent class and child class have same fields. In the above example, Animal and Dog both classes have a common property color. If we print color property, it will print the color of current class by default.

What does JVM stand for?
Answer: Java Virtual Machine

Is JVM platform independent?
Answer: Every system has its own JVM which gets installed automatically when the jdk software is installed. ... An important point to be noted is that while JAVA is platform-independent language, the JVM is platform-dependent. Different JVM is designed for different OS and byte code is able to run on different OS.

What version of Java are you using?
Answer: java version &quot;1.8.0_221.

What does JAR stand for?
Answer: Java ARchive

What is the difference between JDK and JVM?
Answer: JDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM is an environment for executing bytecode. The full form of JDK is Java Development Kit, while the full form of JRE is Java Runtime Environment, while the full form of JVM is Java Virtual Machine.

What is the difference between JVM and JRE?
Answer: JRE is the container, JVM is the content. Java Runtime Environment contains JVM, class libraries, and other supporting files. It does not contain any development tools such as compiler, debugger, etc. ... JRE = JVM + Java Packages Classes (like util, math, lang, awt, swing etc) + runtime libraries.

Explain the difference between compile-time and run-time?
Answer: Compile-time and Runtime are the two programming terms used in the software development. Compile-time is the time at which the source code is converted into an executable code while the run time is the time at which the executable code is started running.

What is heap?
Answer: The Java heap is the area of memory used to store objects instantiated by applications running on the JVM. Objects in the heap can be shared between threads. Many users restrict the Java heap size to 2-8 GB in order to minimize garbage collection pauses.

How does Java manage its memory?
Answer: n Java, memory management is the process of allocation and de-allocation of objects, called Memory management. Java does memory management automatically. Java uses an automatic memory management system called a garbage collector. Thus, we are not required to implement memory management logic in our application.

What is the difference between String, StringBuffer and StringBuilder?
Answer:

What is Singleton class?
Answer:

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:

What is Enum?
Answer: An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables). To create an enum , use the enum keyword (instead of class or interface), and separate the constants with a comma.

What is Iterator?
Answer: An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet. It is called an "iterator" because "iterating" is the technical term for looping. To use an Iterator, you must import it from the java.

Which one will take more memory: an int or Integer? Why?
Answer: int is a primitive data type which takes 32 bits(4 bytes) to store. When your Java code uses the new operator to create an instance of a Java object, much more data is allocated than you might expect. ... Integer is an object which takes 128 bits (16 bytes) to store int value

Why are Strings considered to be immutable in Java?
Answer: The string is Immutable in Java because String objects are cached in the String pool. ... Mutable String would produce two different hashcodes at the time of insertion and retrieval if contents of String was modified after insertion, potentially losing the value object in the map.

What is constructor chaining in Java?
Answer: The process of invoking a sequence of constructors upon initialization of a class object is called constructor chaining. Constructor chaining is useful when you want to invoke multiple constructors, one after another, by initializing only one instance.

The difference between Serial and Parallel Garbage Collector?
Answer:  a serial collector is a default copying collector which uses only one GC thread for the GC operation, while a parallel collector uses multiple GC threads for the GC operation.

What does JIT stands for?
Answer: just-in-time

Explain the process of Java garbage collection?
Answer: Java garbage collection is the process by which Java programs perform automatic memory management. Java programs compile to bytecode that can be run on a Java Virtual Machine, or JVM for short. When Java programs run on the JVM, objects are created on the heap, which is a portion of memory dedicated to the program.

Can you guarantee the garbage collection process?
Answer: No, Garbage collection does not guarantee that a program will not run out of memory. ... So to conclude, garbage collection (GC) handles most of the memory management and makes all possible attempts to make memory available for the application but it does not guarantee that it will be able to provide it.

What is the difference between stack and heap in Java?
Answer: Java Heap Space is used throughout the application, but Stack is only used for the method — or methods — currently running. The Heap Space contains all objects are created, but Stack contains any reference to those objects. Objects stored in the Heap can be accessed throughout the application

What is reflection in Java and why is it useful?
Answer: Reflection is a feature in the Java programming language. It allows an executing Java program to examine or "introspect" upon itself, and manipulate internal properties of the program. For example, it's possible for a Java class to obtain the names of all its members and display them.

What is multithreading in Java?
Answer: MULTITHREADING in Java is a process of executing two or more threads simultaneously to maximum utilization of CPU. Multithreaded applications execute two or more threads run concurrently. Hence, it is also known as Concurrency in Java. Each thread runs parallel to each other.

What is synchronization in Java?
Answer: Synchronization in java is the capability to control the access of multiple threads to any shared resource. Java Synchronization is better option where we want to allow only one thread to access the shared resource.

What is a Framework?
Answer: Java Framework is the body or platform of pre-written codes used by Java developers to develop Java applications or web applications. In other words, Java Framework is a collection of predefined classes and functions that is used to process input, manage hardware devices interacts with system software. It acts like a skeleton that helps the developer to develop an application by writing their own code.

What are the testing Frameworks available in Java?
Answer: JBehave.
        JUnit.
        Serenity.
        TestNG.
        Selenide.
        Gauge.
        Geb.
        Spock.

What are jUnit and testNG?
Answer: Both Testng and Junit are Testing framework used for Unit Testing. TestNG is similar to JUnit. Few more functionalities are added to it that makes TestNG more powerful than JUnit.

What are the dependencies for this project?
Answer: A project dependency is a logical, constraint-based or preferential relationship between two activities or tasks such that the completion or the initiation of one is reliant on the completion or initiation of the other. If you are painting a canvas, the application of the oil paint is one activity

What is dependency injection in Java?
Answer: Dependency injection (DI) is the concept in which objects get other required objects from outside. DI can be implemented in any programming language. The general concept behind dependency injection is called Inversion of Control. A Java class has a dependency on another class, if it uses an instance of this class.

Explain what static binding and dynamic binding is?
Answer: Static binding happens when all information needed to call a function is available at the compile-time. Dynamic binding happens when all information needed for a function call cannot be determined at compile-time.